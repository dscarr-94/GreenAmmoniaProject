# TODO: Some sort of visualizing for the user to see progress on CMD-Line

from openpyxl import *
import yaml

#Retrieves data from the YAML file and returns a dictionary with the vals.
def getConfigVariables():
    with open('config.yaml') as f:
        data = yaml.load(f, Loader=yaml.FullLoader)
        return data

def copyWorksheet(workbook, sheetName):
    source = workbook.active
    target = workbook.copy_worksheet(source)
    target.title = sheetName
    return target

def removeZeroRows(worksheet, startRow):
    maxRow = worksheet.max_row
    maxCol = worksheet.max_column
    rowNum = startRow - 1 #Starting point
    for row in worksheet.iter_rows(min_row=startRow, min_col=1, max_col=maxCol, max_row=maxRow, values_only=True):
        rowNum += 1
        zeroFlag = True #Assume all zero to begin with
        for item in row:
            if(isinstance(item, (float, long)) and item != None): #Is a number?
                if(item != 0): #Is it non-zero?
                    zeroFlag = False
        if(zeroFlag):
            worksheet.delete_rows(rowNum, 1)

def removeRowsBelow(worksheet, startRow):
    maxRow = worksheet.max_row
    worksheet.delete_rows(startRow,maxRow) #Delete from startRow down

def intialCleanup(worksheet):
    removeRowsBelow(worksheet, 47) #47 used to represent Mass Flows row
    removeZeroRows(worksheet, 11) #Magic number 11 used for specific start pt.

def entropyCalculations(worksheet):
    rowIdx = 0
    maxRow = worksheet.max_row
    flag = False
    for row in worksheet.iter_rows(min_row=1, min_col=1, max_col=1, max_row=maxRow, values_only=True):
        rowIdx += 1
        for item in row:
            if(item == "Enthalpy Flow"):
                flag = True #found the one row I needed
                newRow = rowIdx + 1
                worksheet.insert_rows(newRow, 1) #Create new row below Enthalpy
                titleCell = "A" + str(newRow)
                unitCell = "B" + str(newRow)
                worksheet[titleCell] = "Entropy Flow" #Add new name for row
                worksheet[unitCell] = "kW/K"
        if(flag):
            break

def main():
    print("Main Source file called")
    inputData = getConfigVariables()
    streamWorkbook = inputData["workbookName"]
    print("Working on: " + str(streamWorkbook))

    try:
        wb = load_workbook(streamWorkbook)
        overallWS = copyWorksheet(wb, "Overall")
        intialCleanup(overallWS)
        entropyCalculations(overallWS)
        wb.save(streamWorkbook)

    except IOError, streamWorkbook:
        print("Error opening the workbook")
        print(streamWorkbook)

if __name__ == '__main__':
    main()
